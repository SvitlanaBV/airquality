{"version":3,"sources":["assets/logo1.svg","assets/logo3.svg","assets/logo2.svg","assets/hero-bg.jpg","assets/factsSlider/slide1.jpg","assets/factsSlider/slide2.jpg","assets/factsSlider/slide3.jpg","assets/factsSlider/slide4.jpg","assets/factsSlider/slide5.jpg","assets/prom1.jpg","assets/prom2.jpg","assets/prom3.jpg","assets/prom4.jpg","assets/prom5.jpg","assets/prom6.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/SectorsList/SectorsItem.js","components/SectorsList/SectorsList.js","components/Footer/Footer.js","components/Airquality/Airquality.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logosImages","logos","map","logoItem","i","src","alt","className","key","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slide","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","slidesPerGroup","centeredSlides","SectorsItem","sector","number","useState","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","style","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","Footer","partners","author","designer","partnersLogos","logo","navLinks","mapboxgl","accessToken","Airquality","mapContainer","useRef","lng","lat","zoom","locationInfo","useEffect","Map","container","current","center","ref","App","shidLogo","ITNLogo","gcLogo","require","sectors","bgImg","heroBg","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.62bde82b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo3.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo2.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/hero-bg.b236af76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide1.3e6d941c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide2.2d01e323.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide3.638ec227.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide4.8a21e8b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide5.bb9f49bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prom1.3d66b58c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prom2.fb06d4dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prom3.a3fe3aa1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prom4.17b056bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prom5.1d9ae9e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prom6.fd744a55.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss';\r\n\r\nconst HeroBlock = ({title, links, logos}) => {\r\n    const logosImages = logos.map((logoItem, i) => <img src={logoItem} alt=\"partnerLogo\" className=\"hero-partners-item\" key={i}/>);\r\n    const navItems = links.map((link, i) => <a href={link.href} className=\"hero-nav-item\" key={i}>{link.title}</a>);\r\n\r\n\r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"container\">\r\n                <div className=\"hero-partners\">\r\n                    {logosImages}\r\n                </div>\r\n                <nav className=\"hero-navigation\">\r\n                    {navItems}\r\n                </nav>\r\n                <h1 className=\"hero-title\">\r\n                    {title}\r\n                </h1>\r\n                <a href=\"#\" className=\"hero-link\">\r\n                    Отследить\r\n                </a>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;","import React from 'react';\r\nimport './Facts.scss';\r\n\r\nconst SlideFacts = ({item}) => {\r\n    return (\r\n        <div className=\"facts-slide\">\r\n            <img src={item.imgUrl} alt=\"slide_image\"/>\r\n            <p className=\"facts-slide-desc\">\r\n                {item.desc}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport './Facts.scss';\r\n//import {useScreenSize} from \"../../utils/useScreenSize\";\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nconst Facts = ({title, slides}) => {\r\n    //const winSize = useScreenSize();\r\n    const factsSlides = slides.map((slide) => <SwiperSlide key={slide.id}>\r\n        <SlideFacts item={slide} />\r\n    </SwiperSlide>);\r\n\r\n    return (\r\n        <section className=\"facts container\">\r\n            <h2 className=\"facts-title\" id=\"facts\">\r\n                {title}\r\n            </h2>\r\n            <div className=\"swiper-button-prev\"/>\r\n            <Swiper\r\n                navigation={{\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev',\r\n                }}\r\n                pagination={{\r\n                    el: '.facts-pagination',\r\n                    clickable: true,\r\n                    renderBullet: function (index, className) {\r\n                        return `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n                     },\r\n                }}\r\n                spaceBetween={30}\r\n                slidesPerView={3}\r\n                slidesPerGroup={3}\r\n                centeredSlides={true}\r\n                //loop={true}\r\n                //loopFillGroupWithBlank={true}\r\n            >\r\n                {factsSlides}\r\n            </Swiper>\r\n            <div className=\"swiper-button-next\"/>\r\n            <div className=\"facts-pagination\" />\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Facts;","import React, {useState} from 'react';\r\n\r\nconst SectorsItem = ({sector, number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false);\r\n    const toggleToolTip = (newValue) => {\r\n        setDirectionSwitched(number % 3 === 0);\r\n        setToolTipShowing(newValue);\r\n    };\r\n    return (\r\n        <div className=\"sectors-list-item\"\r\n             onMouseEnter={() => toggleToolTip(true)}\r\n             onMouseLeave={() => toggleToolTip(false)}\r\n             style={{\r\n                 background: `url(${sector.imgUrl}) center no-repeat`,\r\n                 backgroundSize: 'cover'\r\n             }}>\r\n            <p className=\"sectors-list-item-name\">\r\n                {sector.name}\r\n            </p>\r\n            {\r\n                isToolTipShowing && <p className={`sectors-list-item-tooltip ${\r\n                    isDirectionSwitched\r\n                        ? \"sectors-list-item-tooltip-switched\"\r\n                        : \"\"\r\n                    }`}>\r\n                    {sector.description}\r\n                </p>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectorsItem;","import React from 'react';\r\nimport './SectorsList.scss';\r\nimport SectorsItem from \"./SectorsItem\";\r\n\r\nconst SectorsList = ({title, subtitle, items}) => {\r\n    const itemsList = items.map((sector, i) => <SectorsItem sector={sector} number={i+1} key={i}/>);\r\n\r\n    return (\r\n        <section className=\"sectors container\">\r\n            <h2 className=\"sectors-title\" id=\"police\">\r\n                {title}\r\n            </h2>\r\n            <p className=\"sectors-subtitle\">\r\n                {subtitle}\r\n            </p>\r\n            <div className=\"sectors-list\">\r\n                {itemsList}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SectorsList;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({partners, links, author, designer}) => {\r\n    const partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'} className=\"footer-partners-item\"/>);\r\n    const navLinks = links.map((link, i) => <a href={link.href} key={i} className={'footer-nav-link'}>{link.title}</a>);\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-partners\">\r\n                    {partnersLogos}\r\n                </div>\r\n\r\n                <div className=\"footer-text-wrap\">\r\n                    <div className=\"footer-nav\">\r\n                        {navLinks}\r\n                    </div>\r\n\r\n                    <p className=\"footer-nav-text\">\r\n                        Сайт был разработан <span className=\"text-yellow\">{author}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{designer}</span>.\r\n                    </p>\r\n                </div>\r\n\r\n                <p className=\"footer-text\">\r\n                    2020, Все права защищены\r\n                </p>\r\n                <p className=\"footer-text\">\r\n                    Согласие на обработку персональных данных <br/>\r\n                    Политика конфиденциальности\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './Airquality.scss';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYnN3NzIwMTAiLCJhIjoiY2tmbGFsaThyMDBvbDJzbnhza2d3aHZqbCJ9.hertY8pbXwexBE5nni0j3A';\r\n\r\nconst Airquality = () => {\r\n    const mapContainer = useRef(null);\r\n    const [locationInfo] = useState({\r\n        lng: 31.1828699,\r\n        lat: 48.383022,\r\n        zoom: 6\r\n    });\r\n\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [locationInfo.lng, locationInfo.lat],\r\n            zoom: locationInfo.zoom\r\n        });\r\n    },\r\n    );\r\n\r\n    return (\r\n        <section className={'air-q container'}>\r\n            <h2 className=\"air-q-title\" id=\"index\">\r\n                Индекс качества воздуха в режиме реального времени\r\n            </h2>\r\n            <div className=\"air-q-map\" ref={mapContainer}/>\r\n            <p className=\"air-q-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Airquality;","import React from 'react';\nimport './App.scss';\nimport HeroBlock from \"./components/HeroBlock/HeroBlock\";\nimport shidLogo from \"./assets/logo1.svg\";\nimport gcLogo from \"./assets/logo3.svg\";\nimport ITNLogo from \"./assets/logo2.svg\";\nimport heroBg from \"./assets/hero-bg.jpg\"\nimport Facts from \"./components/Facts/Facts\";\nimport SectorsList from \"./components/SectorsList/SectorsList\";\nimport Footer from \"./components/Footer/Footer\";\nimport Airquality from \"./components/Airquality/Airquality\";\n\nfunction App() {\n    const partners = [\n        shidLogo,\n        ITNLogo,\n        gcLogo\n    ];\n    const links = [\n        {\n            title: \"Основные факты\",\n            href: \"#facts\"\n        },\n        {\n            title: \"Индекс качества воздуха\",\n            href: \"#index\"\n        },\n        {\n            title: \"Политика по уменьшению загрязнений\",\n            href: \"#police\"\n        }\n    ];\n    const factsSlides = [\n        {\n            id: \"1332\",\n            imgUrl: require(\"./assets/factsSlider/slide1.jpg\"),\n            desc: \"Женщины и дети – главные жертвы загрязнения воздуха\"\n        },\n        {\n            id: \"1333\",\n            imgUrl: require(\"./assets/factsSlider/slide2.jpg\"),\n            desc: \"Защитники окружающей среды подвергаются преследованиям\"\n        },\n        {\n            id: \"1334\",\n            imgUrl: require(\"./assets/factsSlider/slide3.jpg\"),\n            desc: \"Загрязнение воздуха – нарушение прав человека\"\n        },\n        {\n            id: \"1335\",\n            imgUrl: require(\"./assets/factsSlider/slide4.jpg\"),\n            desc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха\"\n        },\n        {\n            id: \"1336\",\n            imgUrl: require(\"./assets/factsSlider/slide5.jpg\"),\n            desc: \"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\n        }\n    ];\n    const sectors = [\n        {\n         name: \"Промышленность\",\n            imgUrl: require(\"./assets/prom1.jpg\"),\n            description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\n        },\n        {\n            name: \"Транспорт\",\n            imgUrl: require(\"./assets/prom2.jpg\"),\n            description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\n        },\n        {\n            name: \"Городское планирование\",\n            imgUrl: require(\"./assets/prom3.jpg\"),\n            description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\n        },\n        {\n            name: \"Энергия\",\n            imgUrl: require(\"./assets/prom4.jpg\"),\n            description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\n        },\n        {\n            name: \"Энергетика\",\n            imgUrl: require(\"./assets/prom5.jpg\"),\n            description: \"Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\n        },\n        {\n            name: \"Утилизация отходов\",\n            imgUrl: require(\"./assets/prom6.jpg\"),\n            description: \"Стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\n        },\n    ];\n    const author = \"Светланой Борисовой\";\n    const designer = \"Валерией Бубырь\";\n  return (\n    <>\n      <HeroBlock title=\"Качество атмосферного воздуха и здоровье\"\n                 logos={partners}\n                 bgImg={heroBg}\n                 links={links}/>\n      <Facts title=\"Основные факты\" slides={factsSlides} />\n      <Airquality />\n      <SectorsList title=\"Политика по уменьшению загрязнений\"\n      subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\n      items={sectors}      />\n      <Footer links={links}\n              partners={partners}\n              author={author}\n              designer={designer}/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}